{"version":3,"file":"static/chunks/809.b1453ea6fe38212a.js","mappings":"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","sources":["webpack://_N_E/./libs/bs-sdk/Emitter.ts","webpack://_N_E/./libs/bs-sdk/BsSdk.ts","webpack://_N_E/./libs/bs-sdk/components/b-provide/index.tsx","webpack://_N_E/./libs/bs-sdk/BsORM.ts","webpack://_N_E/./libs/bs-sdk/components/b-select-field/index.tsx","webpack://_N_E/./components/echarts/index.tsx","webpack://_N_E/./libs/bs-sdk/shared.ts","webpack://_N_E/./views/Home/index.tsx","webpack://_N_E/./views/Home/index.module.css","webpack://_N_E/<anon>"],"sourcesContent":["import { ParamsType } from \"./typestools\";\n\nexport class Emitter<CB extends (...args: any[]) => void> {\n  private events = new Set<CB>();\n  private lastEmitArgs: ParamsType<CB> | undefined;\n  constructor() {}\n\n  emitSync(...args: ParamsType<CB>) {\n    this.events.forEach((cb) => {\n      cb(...args);\n    });\n  }\n\n  emitLifeCycle(...args: ParamsType<CB>) {\n    this.lastEmitArgs = args;\n    return Promise.resolve().then(() => {\n      try {\n        this.emitSync(...args);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  emit(...args: ParamsType<CB>) {\n    return Promise.resolve().then(() => {\n      try {\n        this.emitSync(...args);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  on(cb: CB) {\n    if (this.lastEmitArgs) {\n      cb(...this.lastEmitArgs);\n    }\n    this.events.add(cb);\n    return () => {\n      this.off(cb);\n    };\n  }\n\n  wait() {\n    return new Promise<ParamsType<CB>>((resolve) => {\n      const cb = (...args: ParamsType<CB>) => {\n        resolve(args);\n        clear();\n      };\n      const clear = this.on(cb as CB);\n    });\n  }\n\n  off(cb: CB) {\n    this.events.delete(cb);\n  }\n\n  destroy() {\n    this.events.clear();\n  }\n}\n","import {\n  IEventCbCtx,\n  bitable,\n  Selection,\n  ITable,\n  IField,\n} from \"@lark-base-open/js-sdk\";\nimport { Emitter } from \"./Emitter\";\n\nexport type SelectionChangeEmitter = (event: IEventCbCtx<Selection>) => any;\nexport type InitEmitter = (sdk: BsSdk) => any;\n\nexport interface BIField extends IField {\n  name: string;\n}\n\nexport class BsSdk {\n  public readonly bitable = bitable;\n  public readonly base = bitable.base;\n  public activeTable: ITable | undefined;\n  // public readonly initEmitter = new Emitter<InitEmitter>();\n  public readonly selectionChangeEmitter =\n    new Emitter<SelectionChangeEmitter>();\n\n  constructor({\n    onSelectionChange = false,\n    immediatelySelectionChange = true,\n  } = {}) {\n    if (onSelectionChange) {\n      this.base.onSelectionChange(async (event) => {\n        this.activeTable = undefined;\n        this.selectionChangeEmitter.emitLifeCycle(event);\n      });\n    }\n    if (immediatelySelectionChange && onSelectionChange) {\n      this.getSelection().then((selection) => {\n        this.selectionChangeEmitter.emitSync({ data: selection });\n      });\n    }\n  }\n\n  async getRecordIds(table?: ITable) {\n    if (!table) table = await this.getActiveTable();\n    return await table.getRecordIdList();\n  }\n\n  async getRecordById(table: ITable, recordId: string) {\n    return await table.getRecordById(recordId);\n  }\n\n  async getActiveTable() {\n    if (this.activeTable) return this.activeTable;\n    this.activeTable = await bitable.base.getActiveTable();\n    return this.activeTable;\n  }\n\n  async getTableList() {\n    return await bitable.base.getTableList();\n  }\n\n  async getFieldList(table: ITable) {\n    const fieldList: BIField[] = await table.getFieldList();\n    for (let i = 0; i < fieldList.length; i++) {\n      const field = fieldList[i];\n      field.name = await field.getName();\n    }\n    return fieldList;\n  }\n\n  async getSelection(): Promise<Selection> {\n    return await bitable.base.getSelection();\n  }\n\n  async getSelectionQuery(selection: Partial<Selection>) {\n    const table = selection.tableId\n      ? await this.base.getTableById(selection.tableId)\n      : undefined;\n    const result = {\n      table: table,\n      view: selection.viewId\n        ? await table?.getViewById(selection.viewId)\n        : undefined,\n      field: selection.fieldId\n        ? await table?.getFieldById(selection.fieldId)\n        : undefined,\n      record: selection.recordId\n        ? await table?.getRecordById(selection.recordId)\n        : undefined,\n    };\n    return result;\n  }\n\n  async getSelection2({\n    viewId = false,\n    fieldId = false,\n    recordId = false,\n  } = {}) {\n    const selection = await this.getSelection();\n    return await this.getSelectionQuery({\n      viewId: viewId ? selection.viewId : undefined,\n      fieldId: fieldId ? selection.fieldId : undefined,\n      recordId: recordId ? selection.recordId : undefined,\n    });\n  }\n}\n","import { createContext, useEffect, useRef, useState } from \"react\";\nimport { BsORM } from \"../../BsORM\";\nimport { Form, Spin } from \"@douyinfe/semi-ui\";\nimport { BaseFormProps } from \"@douyinfe/semi-ui/lib/es/form\";\n\nexport const Context = createContext<{ orm?: BsORM }>({\n  orm: undefined,\n});\n\nexport type BProvideProps = {\n  orm: BsORM;\n  formProps?: BaseFormProps;\n  children: JSX.Element | JSX.Element[];\n  loadingText?: string;\n};\n\nexport default function BProvide(props: BProvideProps) {\n  const [ctx, setCtx] = useState({ orm: props.orm });\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    const clear = props.orm.initEmitter.on(() => {\n      console.log(\"init\", props.orm);\n      setInit(true);\n    });\n    return clear;\n  }, []);\n\n  return (\n    <Context.Provider value={ctx}>\n      <Form {...props.formProps}>\n        {init ? (\n          props.children\n        ) : (\n          <div\n            style={{\n              height: \"500px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Spin size=\"large\"></Spin>\n            <div style={{ fontSize: \"14px\", color: \"#333\", marginTop: \"5px\" }}>\n              {props.loadingText || \"loading...\"}\n            </div>\n          </div>\n        )}\n      </Form>\n    </Context.Provider>\n  );\n}\n","import { IField, ITable } from \"@lark-base-open/js-sdk\";\nimport { BIField, BsSdk } from \"./BsSdk\";\nimport { Emitter } from \"./Emitter\";\n\nexport type Model = {\n  table: ITable;\n  fields: BIField[];\n};\n\nexport class BsORM {\n  public models: Map<string, Model> = new Map();\n  public activeModel: string | undefined;\n  public initEmitter = new Emitter();\n  constructor(public sdk: BsSdk) {\n    sdk.getTableList().then(async (tables) => {\n      await Promise.all(\n        tables.map(async (table) => {\n          const fields = await sdk.getFieldList(table);\n          this.models.set(table.id, { table, fields: fields });\n        })\n      );\n      const activeTable = await sdk.getActiveTable();\n      this.activeModel = activeTable?.id;\n      this.initEmitter.emitLifeCycle();\n    });\n\n    sdk.selectionChangeEmitter.on(async (event) => {\n      this.activeModel = event.data.tableId as string;\n    });\n  }\n\n  getRecord(recordId: string) {\n    return this.sdk\n      .getRecordById(this.active.table, recordId)\n      .then((record) => record.fields);\n  }\n\n  get active(): Model {\n    return this.models.get(this.activeModel!) as Model;\n  }\n\n  async use(table: string | ITable) {\n    await this.initEmitter.wait();\n    if (typeof table === \"string\") {\n      this.activeModel = table;\n      const model = this.models.get(table);\n      if (!model) return;\n      return model.table;\n    }\n    this.activeModel = table.id;\n    return table;\n  }\n\n  getFields() {\n    const table = this.activeModel;\n    if (!table) return undefined;\n    const model = this.models.get(table);\n    if (!model) return undefined;\n    return model.fields as BIField[];\n  }\n\n  getFieldsMap() {\n    const fields = this.getFields();\n    const map = new Map<string, BIField>();\n    fields?.forEach((field) => {\n      map.set(field.id, field);\n    });\n    return map;\n  }\n}\n","import { useContext } from \"react\";\nimport { Context } from \"../b-provide\";\nimport { Form, Select } from \"@douyinfe/semi-ui\";\nimport { SelectProps } from \"@douyinfe/semi-ui/lib/es/select\";\n\nexport type BSelectFieldProps = SelectProps & {\n  field: string;\n  label?: string;\n  filterOption?: (val: any) => any;\n};\n\nexport default function BSelectField(props: BSelectFieldProps) {\n  const ctx = useContext(Context);\n  const items = ctx.orm\n    ?.getFields()\n    ?.filter(props.filterOption ?? ((val) => true))\n    .map((field: any) => (\n      <Form.Select.Option key={field.id} value={field.id}>\n        {field.name}\n      </Form.Select.Option>\n    ));\n  return <Form.Select {...props}>{items}</Form.Select>;\n}\n","import * as echarts from \"echarts\";\nimport { useEffect, useRef } from \"react\";\n\nexport default function ECharts(props: any) {\n  const { option } = props;\n  const chartRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const chart = echarts.init(chartRef.current!);\n    console.log(chart);\n    chart.setOption(option);\n    if (props.refInstance) props.refInstance.current = chart;\n    return () => {\n      chart.dispose();\n    };\n  }, [option, props.refInstance]);\n  return <div ref={chartRef} style={{ width: \"100%\", height: \"100%\" }}></div>;\n}\n","\"use client\";\nimport type { IOpenAttachment } from \"@lark-base-open/js-sdk\";\nimport { useEffect, useState } from \"react\";\n\nexport async function fileToIOpenAttachment(\n  base: any,\n  file: File\n): Promise<IOpenAttachment> {\n  const tokens = await base.batchUploadFile([file]);\n  return {\n    name: file.name,\n    size: file.size,\n    type: file.type,\n    token: tokens[0],\n    timeStamp: file.lastModified,\n  };\n}\n// function downloadFile(file: Blob | MediaSource) {\n//   const downloadLink = document.createElement(\"a\");\n//   downloadLink.href = URL.createObjectURL(file);\n//   downloadLink.download = file.name;\n//   downloadLink.click();\n// }\nexport function fileToURL(file: Blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = (error) => {\n      reject(error);\n    };\n    reader.readAsDataURL(file);\n  });\n}\nexport async function canvasToFile(\n  canvas: HTMLCanvasElement,\n  fileName: string,\n  fileType = \"image/png\"\n) {\n  // 获取Canvas上的图像数据（这里假设图像数据为DataURL）\n  // const imageDataURL = canvas.toDataURL(fileType);\n\n  // // 将DataURL转换为Blob对象\n  // const blob = dataURLToBlob(imageDataURL);\n\n  const blob: Blob = await new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob(\n      (blob) => {\n        if (!blob) return reject(new Error(\"canvas to blob error\"));\n        resolve(blob);\n      },\n      fileType,\n      1\n    );\n  });\n\n  // 创建File对象\n  const file = new File([blob], fileName, { type: fileType });\n\n  return file;\n}\n// 将DataURL转换为Blob对象的辅助函数\nfunction dataURLToBlob(dataURL: string) {\n  const byteString = atob(dataURL.split(\",\")[1]);\n  const mimeString = dataURL.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const arrayBuffer = new ArrayBuffer(byteString.length);\n  const uint8Array = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < byteString.length; i++) {\n    uint8Array[i] = byteString.charCodeAt(i);\n  }\n  return new Blob([arrayBuffer], { type: mimeString });\n}\n\nexport function base64ToFile(\n  base64: string,\n  filename: string,\n  mimeType: string\n) {\n  const arr = base64.split(\",\");\n  const mime = arr[0].match(/:(.*?);/)![1];\n  const bstr = atob(arr[1]);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  // eslint-disable-next-line no-plusplus\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mimeType });\n}\nexport function downloadFile(file: File) {\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = URL.createObjectURL(file);\n  downloadLink.download = file.name;\n  downloadLink.click();\n}\n\nexport function urlToFile(url: string, filename: string, mimeType?: string) {\n  return fetch(url)\n    .then((res) => res.blob())\n    .then(\n      (blob) => new File([blob], filename, { type: mimeType ?? blob.type })\n    );\n}\n\nexport function fileExt(file: string, isDot = true) {\n  const extIdx = file.lastIndexOf(\".\");\n  const [name, ext] =\n    extIdx === -1\n      ? [file, undefined]\n      : [file.slice(0, extIdx), file.slice(extIdx + 1)];\n  return [name, ext ? (isDot ? \".\" : \"\") + ext.toLowerCase() : undefined];\n}\n\nexport function smartFileSizeDisplay(b: number): string {\n  const kb = b / 1024;\n  if (kb < 1) {\n    return b + \"B\";\n  }\n  const mb = kb / 1024;\n  if (mb < 1) {\n    return kb.toFixed(2) + \"KB\";\n  }\n  const gb = mb / 1024;\n  if (gb < 1) {\n    return mb.toFixed(2) + \"MB\";\n  }\n  return gb.toFixed(2) + \"GB\";\n}\n\nexport function smartTimestampDisplay(timestamp: number): string {\n  const date = new Date(timestamp);\n  // const now = new Date();\n  // const diff = now.getTime() - date.getTime();\n  // if (diff < 1000) {\n  //   return \"刚刚\";\n  // }\n  // if (diff < 60 * 1000) {\n  //   return Math.floor(diff / 1000) + \"秒前\";\n  // }\n  // if (diff < 60 * 60 * 1000) {\n  //   return Math.floor(diff / 1000 / 60) + \"分钟前\";\n  // }\n  // if (diff < 24 * 60 * 60 * 1000) {\n  //   return Math.floor(diff / 1000 / 60 / 60) + \"小时前\";\n  // }\n  // if (diff < 7 * 24 * 60 * 60 * 1000) {\n  //   return Math.floor(diff / 1000 / 60 / 60 / 24) + \"天前\";\n  // }\n  return date.toLocaleString();\n}\n\nexport function copyText(url: string) {\n  const input = document.createElement(\"input\");\n  input.value = url;\n  document.body.appendChild(input);\n  input.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(input);\n}\n\nexport function splitFilename(url: string) {\n  const idx = url.lastIndexOf(\"/\");\n  const idx2 = url.lastIndexOf(\"?\");\n  const name = url.slice(idx + 1, idx2 === -1 ? undefined : idx2);\n  return name;\n}\n\nlet isInit = new Map();\nconst initState = (key: string, state: any) => {\n  if (isInit.has(key)) {\n    return isInit.get(key);\n  }\n  const saved = localStorage.getItem(key);\n  const init = saved ? JSON.parse(saved) : state;\n  isInit.set(key, init);\n  return init;\n};\n\nexport function useKeepState<T>(state: T, id = \"default\") {\n  const key = `keep-state-${id}`;\n  const [data, setData] = useState(initState(key, state));\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(data));\n  }, [data, key]);\n\n  return [data, setData] as const;\n}\n\nexport function useDynKeep<T>(state: T) {\n  const [data, setData] = useState(state);\n\n  useEffect(() => {\n    setData(state);\n  }, [state]);\n\n  const save = (id: string) => {\n    localStorage.setItem(id, JSON.stringify(data));\n  };\n\n  const load = (id: string) => {\n    const saved = localStorage.getItem(id);\n    if (saved) {\n      setData(JSON.parse(saved));\n    }\n  };\n\n  return [data, setData, load, save] as const;\n}\n","import { Banner, Button, Form, Space, Spin, Toast } from \"@douyinfe/semi-ui\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport styles from \"./index.module.css\";\nimport { useTranslation } from \"next-i18next\";\nimport { BsSdk } from \"@/libs/bs-sdk/BsSdk\";\nimport BProvide from \"@/libs/bs-sdk/components/b-provide\";\nimport { BsORM } from \"@/libs/bs-sdk/BsORM\";\nimport BSelectField from \"@/libs/bs-sdk/components/b-select-field\";\nimport Section from \"@douyinfe/semi-ui/lib/es/form/section\";\nimport ECharts from \"@/components/echarts\";\nimport {\n  base64ToFile,\n  downloadFile,\n  fileToIOpenAttachment,\n  useKeepState,\n} from \"@/libs/bs-sdk/shared\";\nimport { FieldType } from \"@lark-base-open/js-sdk\";\n\nconst bsSdk = new BsSdk({\n  onSelectionChange: true,\n  immediatelySelectionChange: true,\n});\n\nconst orm = new BsORM(bsSdk);\n\nexport default function Home() {\n  const [t, i18n] = useTranslation();\n  const echartRef = useRef();\n  const [conf, setConf] = useKeepState<any>({\n    output: { type: \"preview\" },\n    chartType: \"line\",\n    chart: { max: 10, min: 0, order: \"default\", auto: true, showValue: true },\n    format: true,\n    formatCode: {},\n  });\n  const [option, setOption] = useState<any>(\n    createOption(\n      \"line\",\n      {\n        A: 10,\n        B: 0,\n        C: 10,\n      },\n      conf?.chart\n    )\n  );\n\n  const setConfValue = useCallback(\n    (value: any) => {\n      conf.select = value.select;\n      setConf(Object.assign({}, mergeDeep(conf, value)));\n    },\n    [conf, setConf]\n  );\n\n  const uiConf = () => {\n    const map: any = {\n      get bar() {\n        return (\n          <>\n            <Form.Select\n              field=\"chart.order\"\n              label={t(\"chart-conf-order\")}\n              placeholder={t(\"chart-conf-\" + conf.chart.order)}\n              optionList={[\n                { label: t(\"chart-conf-default\"), value: \"default\" },\n                { label: t(\"chart-conf-asc\"), value: \"asc\" },\n                {\n                  label: t(\"chart-conf-desc\"),\n                  value: \"desc\",\n                },\n              ]}\n            ></Form.Select>\n          </>\n        );\n      },\n      get line() {\n        return (\n          <>\n            <Form.Select\n              field=\"chart.order\"\n              label={t(\"chart-conf-order\")}\n              placeholder={t(\"chart-conf-\" + conf.chart.order)}\n              optionList={[\n                { label: t(\"chart-conf-default\"), value: \"default\" },\n                { label: t(\"chart-conf-asc\"), value: \"asc\" },\n                {\n                  label: t(\"chart-conf-desc\"),\n                  value: \"desc\",\n                },\n              ]}\n            ></Form.Select>\n          </>\n        );\n      },\n\n      get radar() {\n        return (\n          <>\n            <Form.Switch\n              field=\"chart.showValue\"\n              label={t(\"chart-conf-showValue\")}\n              defaultValue={conf.chart.showValue}\n              initValue={conf.chart.showValue}\n            ></Form.Switch>\n            <Form.Switch\n              field=\"chart.auto\"\n              label={t(\"chart-conf-auto\")}\n              defaultValue={conf.chart.auto}\n              initValue={conf.chart.auto}\n              onChange={(v) => setConfValue({ chart: { auto: v } })}\n            ></Form.Switch>\n            {!conf.chart?.auto && (\n              <>\n                <Form.InputNumber\n                  field=\"chart.max\"\n                  placeholder={conf.chart.max}\n                  label={t(\"chart-conf-max\")}\n                ></Form.InputNumber>\n                <Form.InputNumber\n                  field=\"chart.min\"\n                  placeholder={conf.chart.min}\n                  label={t(\"chart-conf-min\")}\n                ></Form.InputNumber>\n              </>\n            )}\n          </>\n        );\n      },\n    };\n\n    return map[conf.chartType] || null;\n  };\n\n  // console.log(conf);\n\n  useEffect(() => {\n    // const clear = bsSdk.selectionChangeEmitter.on(async (e) => {\n    //   const { record, field } = await bsSdk.getSelectionQuery(e.data);\n    //   console.log(\"record\", record);\n    //   console.log(\"field\", field);\n    //   console.log(e);\n    // });\n    // return clear;\n    console.log(\"useEffect\");\n    bsSdk.bitable.bridge.getLanguage().then((lang) => {\n      i18n.changeLanguage(lang.includes(\"zh\") ? \"zh\" : \"en\");\n    });\n  }, []);\n\n  const onSubmit = useCallback(\n    async (nconf: any) => {\n      console.log(\n        nconf,\n        echartRef\n        // downloadFile(base64ToFile(url, Date.now() + \".png\", \"image/png\"))\n      );\n      conf.select = nconf.select;\n      nconf = mergeDeep(conf, nconf);\n      if (nconf.chart.isExpr) {\n        nconf.chart.expr = nconf.chart.expr || {};\n        for (let i = 0; i < nconf.select.length; i++) {\n          const fieldId = nconf.select[i];\n          if (!nconf.chart.expr[fieldId]) {\n            nconf.chart.expr[fieldId] = \"x\";\n          }\n        }\n      } else {\n        nconf.chart.expr = {};\n      }\n      if (Object.keys(nconf?.select || {}).length === 0)\n        return Toast.error(t(\"toast-select-number-field\"));\n      let load = Toast.info({\n        icon: <Spin />,\n        content: `${t(\"toast-gening\")}...`,\n        duration: 0,\n      });\n      let recordId = \"\";\n      if (nconf.output.type !== \"multiToField\") {\n        const select = await bsSdk.getSelection();\n        console.log({ select });\n\n        if (select.recordId) {\n          recordId = select.recordId as string;\n        } else {\n          if (nconf?.output?.type === \"preview\") {\n            recordId = await (await bsSdk.getActiveTable())\n              .getRecords({ pageSize: 1 })\n              .then((res) => res.records[0].recordId);\n          }\n        }\n      }\n      console.log({ recordId });\n\n      if (nconf.output.type === \"multiToField\") {\n        const recordIds = await bsSdk.getRecordIds();\n        if (!recordIds.length) return Toast.error(t(\"toast-add-record\"));\n        for (let i = 0; i < recordIds.length; i++) {\n          Toast.close(load);\n          load = Toast.info({\n            icon: <Spin />,\n            content: `${t(\"toast-gening\")}(${i + 1}/${recordIds.length})...`,\n            duration: 0,\n          });\n          const recordId = recordIds[i];\n          const url = await gene(recordId);\n          if (!url) continue;\n          const outfield = orm.getFieldsMap().get(nconf.output.field);\n          if ((await outfield?.getType()) !== FieldType.Attachment) {\n            Toast.close(load);\n            return Toast.error(t(\"toast-select-field\"));\n          }\n          outfield?.setValue(recordId, [\n            await fileToIOpenAttachment(\n              bsSdk.base,\n              base64ToFile(url, Date.now() + \".png\", \"image/png\")\n            ),\n          ]);\n        }\n      } else if (nconf.output.type === \"toField\") {\n        if (!recordId) {\n          Toast.close(load);\n          return Toast.error(t(\"toast-select-record\"));\n        }\n\n        const url = await gene(recordId);\n\n        const outfield = orm.getFieldsMap().get(nconf.output.field);\n        if ((await outfield?.getType()) !== FieldType.Attachment) {\n          Toast.close(load);\n          return Toast.error(t(\"toast-select-field\"));\n        }\n        outfield?.setValue(recordId, [\n          await fileToIOpenAttachment(\n            bsSdk.base,\n            base64ToFile(url, Date.now() + \".png\", \"image/png\")\n          ),\n        ]);\n      } else {\n        if (!recordId) {\n          Toast.close(load);\n          return Toast.error(t(\"toast-select-record\"));\n        }\n        await gene(recordId);\n      }\n      Toast.close(load);\n      Toast.success(t(\"toast-gene-success\"));\n\n      async function gene(recordId: string) {\n        const record = await orm.getRecord(recordId);\n        const selectFieldRecord = nconf.select.reduce(\n          (map: any, fieldId: string) => {\n            let v = toDisplay(record[fieldId]);\n            if (!v) {\n              v = 0;\n            }\n            v = Number(v);\n            // console.log(\"select\", v, fieldId, record[fieldId]);\n\n            if (typeof v === \"number\" && v === v) {\n              map[orm.getFieldsMap()?.get(fieldId)?.name as string] = nconf\n                .chart?.expr?.[fieldId]\n                ? parseExpr(nconf.chart.expr[fieldId], { x: v }, () => v)\n                : v;\n            }\n            return map;\n          },\n          {}\n        );\n\n        if (Object.keys(selectFieldRecord).length === 0) {\n          return;\n        }\n\n        setOption(\n          createOption(nconf.chartType, selectFieldRecord, nconf?.chart)\n        );\n        console.log(record, selectFieldRecord);\n\n        await new Promise((resolve) => setTimeout(resolve, 1));\n        const url = (echartRef.current as any)?.getDataURL();\n        return url;\n      }\n    },\n    [conf, t]\n  );\n\n  const onChange = useCallback(\n    (e: any) => {\n      // console.log(\"onChange\", e);\n      setConfValue(e.values);\n    },\n    [setConfValue]\n  );\n\n  function createOption(chartType: string, data: any, opt: any = {}) {\n    let keys = Object.keys(data);\n    const maxKeyLen = Math.max(...keys.map((key) => key.length));\n    if (opt.order === \"asc\" || opt.order === \"desc\") {\n      keys = extractAndSortNumbers(keys);\n      if (opt.order === \"desc\") {\n        keys = keys.reverse();\n      }\n    }\n    if (opt.auto && keys.length) {\n      opt.max = Math.max(...keys.map((key) => data[key]));\n      opt.min = 0;\n    }\n    return (\n      (\n        {\n          get line() {\n            return {\n              wrapStyle: {\n                width: `${(keys.length ?? 0) * 100 + 100}px`,\n                height: `500px`,\n              },\n              animation: false,\n              xAxis: {\n                type: \"category\",\n                data: keys,\n              },\n              yAxis: {\n                type: \"value\",\n              },\n              series: [\n                {\n                  data: keys.map((key) => data[key]),\n                  type: \"line\",\n                },\n              ],\n            };\n          },\n          get bar() {\n            return {\n              wrapStyle: {\n                width: `${(keys.length ?? 0) * 100 + 100}px`,\n                height: `500px`,\n              },\n\n              animation: false,\n              xAxis: {\n                type: \"category\",\n                data: keys,\n              },\n              yAxis: {\n                type: \"value\",\n              },\n              series: [\n                {\n                  data: keys.map((key) => data[key]),\n                  type: \"bar\",\n                },\n              ],\n            };\n          },\n          get radar() {\n            const maxVal = Math.max(...keys.map((key) => data[key]));\n            return {\n              wrapStyle: {\n                width: `500px`,\n                height: `500px`,\n              },\n\n              animation: false,\n              // title: {\n              //   text: \"Basic Radar Chart\",\n              // },\n              // legend: {\n              //   data: [\"Allocated Budget\", \"Actual Spending\"],\n              // },\n              textStyle: {\n                fontSize: 16,\n              },\n              radar: {\n                // shape: 'circle',\n                // indicator: [\n                //   { name: \"Sales\" },\n                //   { name: \"Administration\" },\n                //   { name: \"Information Technology\" },\n                //   { name: \"Customer Support\" },\n                //   { name: \"Development\" },\n                //   { name: \"Marketing\" },\n                // ],\n                indicator: keys.map((key) => ({\n                  name: key,\n                  max: data[key] > opt.max ? data[key] : opt.max,\n                  min: opt.min,\n                  color: data[key] > opt.max ? \"red\" : undefined,\n                  // key.length > 6\n                  //   ? key.slice(0, 6) + \"\\n\" + key.slice(6, key.length)\n                  //   : key,\n                })),\n                axisName: {\n                  color: \"#5470c6\",\n                },\n                center: [\"50%\", \"50%\"], // 将雷达图居中显示\n                radius: maxKeyLen > 5 ? \"50%\" : maxKeyLen > 4 ? \"60%\" : \"70%\", // 设置雷达图的半径为容器高度的70%\n              },\n              series: [\n                {\n                  name: \"Budget vs spending\",\n                  type: \"radar\",\n                  data: [\n                    {\n                      value: keys.map((key) => data[key]),\n                      areaStyle: {\n                        color: \"rgba(66, 139, 212, 0.3)\",\n                      },\n                      label: {\n                        show: opt.showValue,\n                        position: \"inside\",\n                      },\n                      // name: \"Allocated Budget\",\n                    },\n                    // {\n                    //   value: [4200, 3000, 20000, 35000, 50000, 18000],\n                    //   name: \"Allocated Budget\",\n                    // },\n                    // {\n                    //   value: [5000, 14000, 28000, 26000, 42000, 21000],\n                    //   name: \"Actual Spending\",\n                    // },\n                  ],\n                },\n              ],\n            };\n          },\n        } as any\n      )[chartType] || {}\n    );\n  }\n\n  return (\n    <main className={styles.main}>\n      <BProvide\n        orm={orm}\n        formProps={{\n          onSubmit,\n          onChange,\n          labelPosition: \"left\",\n          initValues: conf,\n        }}\n        loadingText={t(\"init\")}\n      >\n        <Section text={t(\"field-conf\")} style={{ marginTop: \"10px\" }}>\n          <BSelectField\n            field=\"select\"\n            label={t(\"select-field\")}\n            placeholder={t(\"select-field-tip\")}\n            multiple\n          ></BSelectField>\n        </Section>\n        <Section text={t(\"chart-conf\")} style={{ marginTop: \"10px\" }}>\n          <Form.Select\n            field=\"chartType\"\n            label={t(\"chart-conf-type\")}\n            optionList={[\n              { label: t(\"chart-conf-line\"), value: \"line\" },\n              { label: t(\"chart-conf-bar\"), value: \"bar\" },\n              { label: t(\"chart-conf-radar\"), value: \"radar\" },\n            ]}\n            onChange={(v: any) => {\n              console.log(v);\n              setConfValue({ chartType: v });\n              // setOption(createOption(v, , opt))\n            }}\n          ></Form.Select>\n          <Form.Switch\n            field=\"chart.isExpr\"\n            label={t(\"chart-conf-expr\")}\n            defaultValue={conf.chart.isExpr}\n            initValue={conf.chart.isExpr}\n            onChange={(v) => setConfValue({ chart: { isExpr: v } })}\n          ></Form.Switch>\n          {conf.chart?.isExpr &&\n            conf.select?.map((fieldId: string) => (\n              <Form.Input\n                key={fieldId}\n                field={`chart.expr.${fieldId}`}\n                label={orm.getFieldsMap()?.get(fieldId)?.name}\n                placeholder=\"x\"\n              ></Form.Input>\n            ))}\n          {uiConf()}\n        </Section>\n        <Section text={t(\"output-conf\")} style={{ marginTop: \"10px\" }}>\n          <Form.Select field=\"output.type\" label={t(\"output-type\")}>\n            <Form.Select.Option value={\"preview\"}>\n              {t(\"priview\")}\n            </Form.Select.Option>\n            <Form.Select.Option value={\"toField\"}>\n              {t(\"gene-to-field\")}\n            </Form.Select.Option>\n            <Form.Select.Option value={\"multiToField\"}>\n              {t(\"gene-multi-to-field\")}\n            </Form.Select.Option>\n          </Form.Select>\n          {conf?.output && conf?.output?.type !== \"preview\" && (\n            <>\n              <BSelectField\n                field=\"output.field\"\n                filterOption={(field) => field?.type === FieldType.Attachment}\n                label={t(\"output-field\")}\n                placeholder={t(\"output-field-tip\")}\n              ></BSelectField>\n              <Banner\n                type=\"danger\"\n                description={t(\"output-field-danger\")}\n                style={{ marginBottom: \"10px\" }}\n              />\n            </>\n          )}\n        </Section>\n        <Space>\n          <Button htmlType=\"submit\" block type=\"primary\">\n            {t(\"btn-gene\")}\n          </Button>\n          <Button\n            type=\"secondary\"\n            block\n            onClick={() => open(\"https://zhuanlan.zhihu.com/p/669107200\")}\n          >\n            {t(\"btn-help\")}\n          </Button>\n        </Space>\n        <div style={{ width: \"100%\", overflow: \"scroll\" }}>\n          <div style={option.wrapStyle}>\n            <ECharts refInstance={echartRef} option={option}></ECharts>\n          </div>\n        </div>\n      </BProvide>\n    </main>\n  );\n}\n\nfunction toDisplay(cell: any) {\n  return typeof cell === \"object\"\n    ? cell?.text ??\n        cell\n          ?.map?.((item: any) => item?.text ?? item?.name)\n          .filter((item: any) => item)\n          .join(\",\")\n    : cell;\n}\n\nfunction extractAndSortNumbers(strings: any[]) {\n  // 定义中文数字映射\n  const chineseNumberMap: any = {\n    零: 0,\n    一: 1,\n    二: 2,\n    三: 3,\n    四: 4,\n    五: 5,\n    六: 6,\n    七: 7,\n    八: 8,\n    九: 9,\n    十: 10,\n    百: 100,\n    千: 1000,\n    万: 10000,\n    亿: 100000000,\n  };\n\n  // 中文数字转阿拉伯数字\n  function chineseToNumber(chineseStr: string) {\n    let total = 0;\n    let temp = 0;\n    let prevUnit = 1;\n\n    for (const char of chineseStr.split(\"\")) {\n      let value = chineseNumberMap[char];\n      if (value < 10) {\n        temp = value;\n      } else {\n        if (temp === 0) temp = 1;\n        if (value > prevUnit) {\n          total += temp;\n          total *= value;\n          temp = 0;\n        } else {\n          total += temp * value;\n        }\n        prevUnit = value;\n        temp = 0;\n      }\n    }\n    return total + temp;\n  }\n\n  // 提取数字并映射为数字值的函数\n  function extractNumber(str: string) {\n    const numberPattern = /(\\d+|[零一二三四五六七八九十百千万亿]+)/g;\n    const matches = str.match(numberPattern);\n    if (!matches) return 0;\n\n    return matches.reduce((sum: number, match: string) => {\n      return (\n        sum + (isNaN(Number(match)) ? chineseToNumber(match) : Number(match))\n      );\n    }, 0);\n  }\n\n  // 排序函数，将包含数字的词进行排序\n  function sortWithNumbers(a: any, b: any) {\n    const numA = extractNumber(a);\n    const numB = extractNumber(b);\n    return numA - numB;\n  }\n\n  // 使用排序函数对字符串数组进行排序\n  return strings.slice().sort(sortWithNumbers);\n}\n\nfunction mergeDeep(a: any, b: any) {\n  const keys = Object.keys(b);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof b[key] === \"object\") {\n      if (typeof a[key] === \"object\") {\n        mergeDeep(a[key], b[key]);\n      } else {\n        a[key] = b[key];\n      }\n    } else {\n      a[key] = b[key];\n    }\n  }\n  return a;\n}\n\nfunction parseExpr(expr: string, ctx: any, cb: any) {\n  // 运行expr\n  try {\n    return new Function(\"ctx\", `with(ctx){return ${expr}}`)(ctx);\n  } catch (error) {\n    return cb();\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home_main__ElU3j\",\"h4\":\"Home_h4__4GCIr\",\"code\":\"Home_code__ESbU9\"};"],"names":["Emitter","emitSync","_len","arguments","length","args","_key","events","forEach","cb","emitLifeCycle","lastEmitArgs","Promise","resolve","then","error","reject","emit","on","add","off","wait","clear","delete","destroy","constructor","Set","BsSdk","getRecordIds","table","getActiveTable","getRecordIdList","getRecordById","recordId","activeTable","bitable","base","getTableList","getFieldList","fieldList","i","field","name","getName","getSelection","getSelectionQuery","selection","tableId","getTableById","undefined","result","view","viewId","getViewById","fieldId","getFieldById","record","getSelection2","onSelectionChange","immediatelySelectionChange","selectionChangeEmitter","event","data","Context","createContext","orm","BProvide","props","ctx","setCtx","useState","init","setInit","useEffect","initEmitter","console","log","jsx_runtime","jsx","Provider","value","Form","formProps","children","jsxs","div","style","height","display","justifyContent","alignItems","flexDirection","Spin","size","fontSize","color","marginTop","loadingText","BsORM","getRecord","sdk","active","fields","models","get","activeModel","use","model","id","getFields","getFieldsMap","map","Map","set","tables","all","BSelectField","useContext","items","filter","filterOption","Select","Option","ECharts","option","chartRef","useRef","chart","echarts","current","setOption","refInstance","dispose","ref","width","fileToIOpenAttachment","file","tokens","batchUploadFile","type","token","timeStamp","lastModified","base64ToFile","base64","filename","mimeType","arr","split","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","isInit","initState","key","state","has","saved","localStorage","getItem","JSON","parse","useKeepState","concat","setData","setItem","stringify","bsSdk","Home","conf","t","i18n","useTranslation","echartRef","setConf","output","chartType","max","min","order","auto","showValue","format","formatCode","createOption","A","B","C","setConfValue","useCallback","select","Object","assign","mergeDeep","bridge","getLanguage","changeLanguage","lang","includes","onSubmit","nconf","isExpr","expr","keys","Toast","load","info","icon","content","duration","getRecords","pageSize","res","records","recordIds","close","url","gene","outfield","getType","FieldType","Attachment","setValue","Date","now","selectFieldRecord","reduce","v","toDisplay","Number","parseExpr","x","setTimeout","_echartRef_current","getDataURL","success","onChange","e","values","opt","maxKeyLen","Math","extractAndSortNumbers","reverse","line","wrapStyle","animation","xAxis","yAxis","series","bar","radar","textStyle","indicator","axisName","center","radius","areaStyle","label","show","position","main","className","styles","labelPosition","initValues","Section","text","placeholder","multiple","optionList","Switch","defaultValue","initValue","Input","Fragment","InputNumber","Banner","description","marginBottom","Space","Button","htmlType","block","onClick","open","overflow","cell","item","join","strings","chineseNumberMap","零","一","二","三","四","五","六","七","八","九","十","百","千","万","亿","chineseToNumber","chineseStr","total","temp","prevUnit","char","extractNumber","str","matches","sum","isNaN","sortWithNumbers","a","b","numA","numB","slice","sort","len","module","exports"],"sourceRoot":""}